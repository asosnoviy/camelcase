#Использовать "../src"
#Использовать asserts

Перем ЮнитТест;
Перем ТокенАвторизации;
Перем МассивВременныхФайлов;
Перем РаботаетПоискФайлов;

Перем МассивТестовыйНаборРазделить;
Перем МассивТестовыйНаборСоединить;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт
	
	ЮнитТест = Тестирование;
	
	ИменаТестов = Новый Массив;
	ИменаТестов.Добавить("ТестДолжен_ПроверитьСтрРазделить");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьСтрСоединить");
	
	Возврат ИменаТестов;
	
КонецФункции // ПолучитьСписокТестов()

Процедура ПередЗапускомТеста() Экспорт
	
	
КонецПроцедуры // ПередЗапускомТеста()

Процедура ПослеЗапускаТеста() Экспорт
	
	
КонецПроцедуры // ПослеЗапускаТеста()

Процедура ТестДолжен_ПроверитьСтрРазделить() Экспорт
	
	Для каждого ТестовыйНабор из МассивТестовыйНаборРазделить Цикл
		Результат = CamelCase.СтрРазделить(ТестовыйНабор.ВходящаяСтрока);
		Утверждения.Проверить(ТестовыйНабор.МассивСлов.Количество() = Результат.Количество(),
								 СтрШаблон("СтрРазделить %1 - Ошибка проверки количества в массиве", ТестовыйНабор.Описание));

		Для Индекс = 0 По ТестовыйНабор.МассивСлов.Количество()-1 Цикл		
			Утверждения.Проверить(ТестовыйНабор.МассивСлов[Индекс] = Результат[Индекс],
					СтрШаблон("СтрРазделить %1, ждали %2, получили %3 - Ошибка проверки по массиву результатов", 
						ТестовыйНабор.Описание, ТестовыйНабор.МассивСлов[Индекс], Результат[Индекс]));
		КонецЦикла;	
	КонецЦикла;	

КонецПроцедуры

Процедура ТестДолжен_ПроверитьСтрСоединить() Экспорт
	
	Для каждого ТестовыйНабор из МассивТестовыйНаборСоединить Цикл
		Результат = CamelCase.СтрСоединить(ТестовыйНабор.МассивСлов);
		Утверждения.Проверить(ТестовыйНабор.ВходящаяСтрока = Результат,
								 СтрШаблон("СтрСоединить %1 - Ошибка сравнения результатов", ТестовыйНабор.Описание));
	КонецЦикла;	

КонецПроцедуры

Процедура ЗаполнениеМассиваТестовыхНаборов()

	МассивТестовыйНаборРазделить = Новый Массив;
	МассивТестовыйНаборСоединить = Новый Массив;

	Структура = Новый Структура;
	Структура.Вставить("Описание", "Пустая строка");
	Структура.Вставить("ВходящаяСтрока", "");
	Массив = Новый Массив;
	Массив.Добавить("");
	Структура.Вставить("МассивСлов", Массив);

	МассивТестовыйНаборРазделить.Добавить(Структура);
	МассивТестовыйНаборСоединить.Добавить(Структура);

	Структура = Новый Структура;
	Структура.Вставить("Описание", "Строка нижнего регистра");
	Структура.Вставить("ВходящаяСтрока", "строканижнегорегистра");
	Массив = Новый Массив;
	Массив.Добавить("строканижнегорегистра");
	Структура.Вставить("МассивСлов", Массив);

	МассивТестовыйНаборРазделить.Добавить(Структура);

	Структура = Новый Структура;
	Структура.Вставить("Описание", "Строка нижнего регистра2");
	Структура.Вставить("ВходящаяСтрока", "Строканижнегорегистра");
	Массив = Новый Массив;
	Массив.Добавить("строканижнегорегистра");
	Структура.Вставить("МассивСлов", Массив);

	МассивТестовыйНаборСоединить.Добавить(Структура);

	Структура = Новый Структура;
	Структура.Вставить("Описание", "Верблюжья Нотация");
	Структура.Вставить("ВходящаяСтрока", "ВерблюжьяНотация");
	Массив = Новый Массив;
	Массив.Добавить("Верблюжья");
	Массив.Добавить("Нотация");
	Структура.Вставить("МассивСлов", Массив);

	МассивТестовыйНаборРазделить.Добавить(Структура);
	МассивТестовыйНаборСоединить.Добавить(Структура);

	Структура = Новый Структура;
	Структура.Вставить("Описание", "Все в верхнем регистре");
	Структура.Вставить("ВходящаяСтрока", "HTML");
	Массив = Новый Массив;
	Массив.Добавить("HTML");
	Структура.Вставить("МассивСлов", Массив);

	МассивТестовыйНаборРазделить.Добавить(Структура);
	МассивТестовыйНаборСоединить.Добавить(Структура);

	Структура = Новый Структура;
	Структура.Вставить("Описание", "Одна из частей в верхнем регистре");
	Структура.Вставить("ВходящаяСтрока", "PDFДокумент");
	Массив = Новый Массив;
	Массив.Добавить("PDF");
	Массив.Добавить("Документ");
	Структура.Вставить("МассивСлов", Массив);

	МассивТестовыйНаборРазделить.Добавить(Структура);
	МассивТестовыйНаборСоединить.Добавить(Структура);

КонецПроцедуры

ЗаполнениеМассиваТестовыхНаборов();

